-- 安装完需要初始化
-- global参数说明这台机器所有的git仓库都会使用这个用户和邮箱
git config --global user.name "Your Name"
git config --global user.email "email@example.com"

-- 将当前所在目录变成git可以管理的仓库
git init 

-- 将文件添加到仓库
git add xxx.xxx

-- 执行add操作后，需要执行commit操作将文件提交到仓库
git commit -m "此次的提交说明"

-- 查看仓库当前的状态 (是否有文件被修改)
git status 

-- 查看difference
git diff
git diff HEAD --readme.txt

-- 查看历史版本记录
git log

-- 按行显示历史记录
git log --pretty=oneline

-- 版本回退(head表示当前版本，head^往前一个，head^^往前两个，head~100往前100个)
git reset --hard HEAD^

-- 回退到指定版本，需通过版本号(commit id)
git reset --hard ac182a

-- 记录每一次操作 ，便于版本回滚
git reflog

-- 原理
工作区：learngit文件夹就是一个工作区
版本库：Repository,工作区有一个隐藏目录.git。版本库中包括stage(暂存区)，
自动创立的分支Master，以及指向Master的指针HEAD
工作区         --->   暂存区  --->  
第一步是用git add把文件添加进去，实际上就是把文件修改添加到暂存区；

第二步是用git commit提交更改，实际上就是把暂存区的所有内容提交到当前分支。

因为我们创建Git版本库时，Git自动为我们创建了唯一一个master分支，
所以，现在，git commit就是往master分支上提交更改。

-- 可以丢弃工作区的修改：
git checkout -- readme.txt

-- github上关联本地库
git remote add origin git@github.com:michaelliao/learngit.git

-- 第一次推送master分支的所有内容至github
git push -u origin master

-- 将最新修改推送至github
git push origin master

-- 从远程库克隆
git clone git@github.com:mminchi/gitskills.git

-- 创建分支
git branch <name>

-- 切换分支(切换到分支b)
git checkout -b dev   <=> git branch dev(创建分支)      git checkout dev(切换到分支b )
git switch <name>
-- 创建并切换到新的dev分支
git switch -c dev
-- 切换后对readme.txt 增加一行数据，最后在master分支上没有发现变化，在dev分支上才会有变化

-- 查看当前分支
git branch

-- 合并分支,将dev分支合并到当前分支
git merge div 

-- 合并之后就可以放心删除dev分支了
git branch -d dev

-- 在两个分支上都有新的提交，会无法进行合并，会有冲突。

-- 查看分支合并图
git log --graph 
git log --graph --pretty=oneline --abbrev-commit